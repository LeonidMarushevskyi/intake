%h1
  = I18n.t(:edit, scope: [:views, :screening], reference: @screening.reference)
= form_for @screening, url: screening_path(@screening.id), method: :put do |f|
  .card.edit.double-gap-top#screening-information-card
    .card-header
      %span Screening Information
    .card-body
      .row
        .col-md-6
          = f.hidden_field :id
          = f.label :name, t('activemodel.attributes.screening.name'), class: 'no-gap'
          = f.text_field :name, placeholder: 'Enter name of the screening'
      .row
        .col-md-6
          - value = (f.object.started_at ? Time.zone.parse(f.object.started_at) : nil)
          = f.label :started_at, t('activemodel.attributes.screening.started_at')
          = f.datetime_field :started_at, value: value
        .col-md-6
          - value = (f.object.ended_at ? Time.zone.parse(f.object.ended_at) : nil)
          = f.label :ended_at, t('activemodel.attributes.screening.ended_at')
          = f.datetime_field :ended_at, value: value
      .row
        .col-md-6
          = f.label :communication_method, t('activemodel.attributes.screening.communication_method')
          - communication_method_options = options_from_collection_for_select(CommunicationMethod::ALL, :first, :last, f.object.communication_method)
          = f.select :communication_method, communication_method_options, include_blank: true

  .card.edit.double-gap-top#participants-card
    .card-header
      %span Participants
    .card-body
      .row
        .col-md-6
          = f.label :participants, t('activemodel.attributes.screening.participants'), class: 'no-gap'
          - participants = @participants.as_json(only: [:id, :first_name, :last_name])
          #add-person{ 'data-props' => { participants: participants, id: 'screening_participants' }.to_json }

  .card.edit.double-gap-top#narrative-card
    .card-header
      %span Narrative
    .card-body
      .row
        .col-md-6
          = f.label :report_narrative, t('activemodel.attributes.screening.report_narrative'), class: 'no-gap'
          = f.text_area :report_narrative

  .card.edit.double-gap-top#referral-information-card
    .card-header
      %span Referral Information
    .card-body
      .row
        .col-md-6
          - value = (f.object.incident_date ? Date.parse(f.object.incident_date) : nil)
          = f.label :incident_date
          = f.date_field :incident_date, value: value
      .row
        .col-md-6
          = f.label :incident_county
          - county_options = options_from_collection_for_select(County::ALL, :first, :last, f.object.incident_county)
          = f.select :incident_county, county_options, include_blank: true
      .row
        .col-md-6
          %fieldset
            %legend Incident Address
            = fields_for 'screening[address]', Address.new(f.object.address.attributes) do |address|
              = address.label :street_address
              = address.text_field :street_address
              = address.label :city
              = address.text_field :city
              = address.label :state
              - state_options = options_from_collection_for_select(USState::ABBREVIATION_NAME_MAP, :first, :last, address.object.state)
              = address.select :state, state_options, include_blank: true
              = address.label :zip
              = address.text_field :zip
      .row
        .col-md-6
          = f.label :location_type
          - location_type_options = grouped_options_for_select(LocationType::ALL, f.object.location_type)
          = f.select :location_type, location_type_options, include_blank: true
      .row
        .col-md-6
          = f.label :response_time
          - response_time_options = options_from_collection_for_select(ResponseTime::ALL, :first, :last, f.object.response_time)
          = f.select :response_time, response_time_options, include_blank: true
      .row
        .col-md-6
          = f.label :screening_decision
          - screening_decision_options = options_from_collection_for_select(ScreeningDecision::ALL, :first, :last, f.object.screening_decision)
          = f.select :screening_decision, screening_decision_options, include_blank: true
      .row
        .centered
          = f.button 'Save', class: 'btn btn-primary'
